package config_go

// Code generated by excelExoprt. DO NOT EDIT.
// source: CherrySlot.xlsx

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"path"
)

// array and map
var _SlotCherryLineMap = map[int64]*SlotCherryLine{}
var _SlotCherryLineArray = []*SlotCherryLine{}

type SlotCherryLine struct {
	data *_SlotCherryLine
}

// 类型结构
type _SlotCherryLine struct {
	INT_ID        int64
	ARRAYINT_Line array_int // 连线判定
}

func (c *SlotCherryLine) ID() int64 { return c.data.INT_ID } //
//连线判定
func (c *SlotCherryLine) Len_Line() int                              { return c.data.ARRAYINT_Line.Len() }
func (c *SlotCherryLine) Get_Line(key int) int64                     { return c.data.ARRAYINT_Line.Get(key) }
func (c *SlotCherryLine) Range_Line(fn func(int, int64) (stop bool)) { c.data.ARRAYINT_Line.Range(fn) }
func (c *SlotCherryLine) Copy_Line() array_int                       { return c.data.ARRAYINT_Line.Copy() }

func HasSlotCherryLine(key int64) bool {
	_, ok := _SlotCherryLineMap[key]
	return ok
}

func GetSlotCherryLine(key int64) *SlotCherryLine {
	return _SlotCherryLineMap[key]
}

func RangeSlotCherryLine(fn func(i int, row *SlotCherryLine) (stop bool)) {
	for i, row := range _SlotCherryLineArray {
		if fn(i, row) {
			break
		}
	}
}

func LenSlotCherryLine() int { return len(_SlotCherryLineArray) }

func init() {
	loadfn["SlotCherryLine"] = loadSlotCherryLine
}

func loadSlotCherryLine(dir string) error {
	data, err := ioutil.ReadFile(path.Join(dir, "SlotCherryLine.json"))
	if err != nil {
		return fmt.Errorf("file=%v read err=%v", err.Error())
	}

	datas := []*_SlotCherryLine{}
	err = json.Unmarshal(data, &datas)
	if err != nil {
		return fmt.Errorf("file=%v parse err=%v", err.Error())
	}

	result_array := []*SlotCherryLine{}
	result_map := map[int64]*SlotCherryLine{}
	for _, row := range datas {
		data := &SlotCherryLine{data: row}
		result_array = append(result_array, data)
		result_map[row.INT_ID] = data
	}
	_SlotCherryLineArray = result_array
	_SlotCherryLineMap = result_map
	fmt.Printf("%-50v len:%v\n", "SlotCherryLine load finish! ", len(result_array))
	return nil
}
